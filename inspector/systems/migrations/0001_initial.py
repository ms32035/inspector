# Generated by Django 4.1.7 on 2023-04-04 12:34

from django.db import migrations, models
import django.db.models.deletion
import encrypted_model_fields.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True, unique=True)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True, unique=True)),
                ('application', models.CharField(choices=[('postgres', 'Postgresql'), ('redshift', 'Redshift'), ('mysql', 'MySQL'), ('snowflake', 'Snowflake')], max_length=30)),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='Instance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(blank=True, max_length=100, null=True)),
                ('port', models.IntegerField(blank=True, null=True)),
                ('db', models.CharField(blank=True, max_length=100, null=True)),
                ('schema', models.CharField(blank=True, max_length=100, null=True)),
                ('login', models.CharField(blank=True, max_length=100, null=True)),
                ('password', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('extra_json', models.JSONField(blank=True, null=True)),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='systems.environment')),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='systems.system')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db', models.CharField(max_length=255, null=True)),
                ('schema', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='systems.system')),
            ],
            options={
                'ordering': ('system', 'db', 'schema', 'name'),
                'unique_together': {('system', 'db', 'schema', 'name')},
            },
        ),
        migrations.CreateModel(
            name='DbTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('db', models.CharField(max_length=255, null=True)),
                ('schema', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('last_profiling_at', models.DateTimeField(null=True)),
                ('rows', models.IntegerField(null=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systems.dataset')),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='systems.environment')),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systems.instance')),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='systems.system')),
            ],
            options={
                'ordering': ('instance', 'db', 'schema', 'name'),
                'unique_together': {('instance', 'db', 'schema', 'name')},
            },
        ),
    ]
